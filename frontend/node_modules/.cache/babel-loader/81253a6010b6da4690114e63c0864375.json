{"remainingRequest":"/home/ubuntu/graduation-design/frontend/EnhancedAccessCtrl-FrontEnd/node_modules/thread-loader/dist/cjs.js!/home/ubuntu/graduation-design/frontend/EnhancedAccessCtrl-FrontEnd/node_modules/babel-loader/lib/index.js!/home/ubuntu/graduation-design/frontend/EnhancedAccessCtrl-FrontEnd/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ubuntu/graduation-design/frontend/EnhancedAccessCtrl-FrontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/graduation-design/frontend/EnhancedAccessCtrl-FrontEnd/src/views/myapp/api_discovery_result.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/graduation-design/frontend/EnhancedAccessCtrl-FrontEnd/src/views/myapp/api_discovery_result.vue","mtime":1741865254060},{"path":"/home/ubuntu/graduation-design/frontend/EnhancedAccessCtrl-FrontEnd/babel.config.js","mtime":1741865254048},{"path":"/home/ubuntu/graduation-design/frontend/EnhancedAccessCtrl-FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1741866277709},{"path":"/home/ubuntu/graduation-design/frontend/EnhancedAccessCtrl-FrontEnd/node_modules/thread-loader/dist/cjs.js","mtime":1741866277705},{"path":"/home/ubuntu/graduation-design/frontend/EnhancedAccessCtrl-FrontEnd/node_modules/babel-loader/lib/index.js","mtime":1741866279329},{"path":"/home/ubuntu/graduation-design/frontend/EnhancedAccessCtrl-FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1741866277709},{"path":"/home/ubuntu/graduation-design/frontend/EnhancedAccessCtrl-FrontEnd/node_modules/vue-loader/lib/index.js","mtime":1741866279657}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9yZWdlbmVyYXRvclJ1bnRpbWUgZnJvbSAiL2hvbWUvdWJ1bnR1L2dyYWR1YXRpb24tZGVzaWduL2Zyb250ZW5kL0VuaGFuY2VkQWNjZXNzQ3RybC1Gcm9udEVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vcmVnZW5lcmF0b3JSdW50aW1lLmpzIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL3VidW50dS9ncmFkdWF0aW9uLWRlc2lnbi9mcm9udGVuZC9FbmhhbmNlZEFjY2Vzc0N0cmwtRnJvbnRFbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maW5kLWluZGV4LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGdldEFwaUxpc3QsIHB1dFVzZXJBcGlMaXN0IH0gZnJvbSAnLi4vLi4vYXBpL215YXBwJzsKaW1wb3J0IEFwaUVkaXQgZnJvbSAnLi9hcGlfZWRpdC52dWUnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0FwaURpc2NvdmVyeVJlc3VsdCcsCiAgY29tcG9uZW50czogewogICAgQXBpRWRpdDogQXBpRWRpdAogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRhYmxlS2V5OiAwLAogICAgICBkaXNjb3ZlcmVkQXBpTGlzdDogW10sCiAgICAgIHVzZXJBcGlMaXN0OiBbXSwKICAgICAgbGlzdExvYWRpbmc6IHRydWUsCiAgICAgIGVkaXREaWFsb2dWaXNpYmxlOiBmYWxzZSwKICAgICAgc2VsZWN0ZWRBcGk6IG51bGwKICAgIH07CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy5nZXRBcGlMaXN0RGF0YSgpOwogIH0sCiAgbWV0aG9kczogewogICAgZ2V0QXBpTGlzdERhdGE6IGZ1bmN0aW9uIGdldEFwaUxpc3REYXRhKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUoKS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIHJlc3BvbnNlOwogICAgICAgIHJldHVybiBfcmVnZW5lcmF0b3JSdW50aW1lKCkud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF90aGlzLmxpc3RMb2FkaW5nID0gdHJ1ZTsKICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDsKICAgICAgICAgICAgICByZXR1cm4gZ2V0QXBpTGlzdCh7CiAgICAgICAgICAgICAgICBhcHBfaWQ6IF90aGlzLiRyb3V0ZS5wYXJhbXMuaWQKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICBfdGhpcy5kaXNjb3ZlcmVkQXBpTGlzdCA9IHJlc3BvbnNlLmRhdGEuZGlzY292ZXJlZF9BUElfbGlzdDsKICAgICAgICAgICAgICBfdGhpcy51c2VyQXBpTGlzdCA9IHJlc3BvbnNlLmRhdGEudXNlcl9BUElfbGlzdDsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTI7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gOTsKICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDEpOwogICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0ZhaWxlZCB0byBmZXRjaCBBUEkgbGlzdDonLCBfY29udGV4dC50MCk7CiAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDEyOwogICAgICAgICAgICAgIF90aGlzLmxpc3RMb2FkaW5nID0gZmFsc2U7CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmZpbmlzaCgxMik7CiAgICAgICAgICAgIGNhc2UgMTU6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzEsIDksIDEyLCAxNV1dKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgbW92ZVRvVXNlckFwaUxpc3Q6IGZ1bmN0aW9uIG1vdmVUb1VzZXJBcGlMaXN0KHJvdykgewogICAgICB2YXIgaW5kZXggPSB0aGlzLmRpc2NvdmVyZWRBcGlMaXN0LmZpbmRJbmRleChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIHJldHVybiBpdGVtLmlkID09PSByb3cuaWQ7CiAgICAgIH0pOwogICAgICBpZiAoaW5kZXggIT09IC0xKSB7CiAgICAgICAgdGhpcy51c2VyQXBpTGlzdC5wdXNoKHRoaXMuZGlzY292ZXJlZEFwaUxpc3RbaW5kZXhdKTsKICAgICAgICB0aGlzLmRpc2NvdmVyZWRBcGlMaXN0LnNwbGljZShpbmRleCwgMSk7CiAgICAgIH0KICAgIH0sCiAgICByZW1vdmVGcm9tVXNlckFwaUxpc3Q6IGZ1bmN0aW9uIHJlbW92ZUZyb21Vc2VyQXBpTGlzdChpbmRleCkgewogICAgICB0aGlzLmRpc2NvdmVyZWRBcGlMaXN0LnB1c2godGhpcy51c2VyQXBpTGlzdFtpbmRleF0pOwogICAgICB0aGlzLnVzZXJBcGlMaXN0LnNwbGljZShpbmRleCwgMSk7CiAgICB9LAogICAgZWRpdEFwaTogZnVuY3Rpb24gZWRpdEFwaShyb3cpIHsKICAgICAgdGhpcy5zZWxlY3RlZEFwaSA9IHJvdzsKICAgICAgdGhpcy5lZGl0RGlhbG9nVmlzaWJsZSA9IHRydWU7CiAgICB9LAogICAgaGFuZGxlU2F2ZUFwaTogZnVuY3Rpb24gaGFuZGxlU2F2ZUFwaSh1cGRhdGVkQXBpKSB7CiAgICAgIHZhciBpbmRleCA9IHRoaXMudXNlckFwaUxpc3QuZmluZEluZGV4KGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgcmV0dXJuIGl0ZW0uaWQgPT09IHVwZGF0ZWRBcGkuaWQ7CiAgICAgIH0pOwogICAgICBpZiAoaW5kZXggIT09IC0xKSB7CiAgICAgICAgdGhpcy51c2VyQXBpTGlzdC5zcGxpY2UoaW5kZXgsIDEsIHVwZGF0ZWRBcGkpOyAvLyDmm7TmlrDmlbDmja4KICAgICAgfQogICAgICB0aGlzLmVkaXREaWFsb2dWaXNpYmxlID0gZmFsc2U7IC8vIOWFs+mXreW8ueahhgogICAgfSwKICAgIHN1Ym1pdFVzZXJBcGlMaXN0OiBmdW5jdGlvbiBzdWJtaXRVc2VyQXBpTGlzdCgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvcigvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZSgpLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUoKS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gMDsKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIHB1dFVzZXJBcGlMaXN0KF90aGlzMi4kcm91dGUucGFyYW1zLmlkLCB7CiAgICAgICAgICAgICAgICB1c2VyX0FQSV9saXN0OiBfdGhpczIudXNlckFwaUxpc3QsCiAgICAgICAgICAgICAgICBleGFtcGxlX0FQSV9zZXFzOiBbXQogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgX3RoaXMyLiRub3RpZnkuc3VjY2Vzcyh7CiAgICAgICAgICAgICAgICB0aXRsZTogJ+aIkOWKnycsCiAgICAgICAgICAgICAgICBtZXNzYWdlOiAnQVBJ5YiX6KGo5bey5o+Q5LqkJywKICAgICAgICAgICAgICAgIGR1cmF0aW9uOiAyMDAwCiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAxMDsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gNjsKICAgICAgICAgICAgICBfY29udGV4dDIudDAgPSBfY29udGV4dDJbImNhdGNoIl0oMCk7CiAgICAgICAgICAgICAgY29uc29sZS5lcnJvcignRmFpbGVkIHRvIHN1Ym1pdCB1c2VyIEFQSSBsaXN0OicsIF9jb250ZXh0Mi50MCk7CiAgICAgICAgICAgICAgX3RoaXMyLiRub3RpZnkuZXJyb3IoewogICAgICAgICAgICAgICAgdGl0bGU6ICfplJnor68nLAogICAgICAgICAgICAgICAgbWVzc2FnZTogJ+aPkOS6pOWksei0pScsCiAgICAgICAgICAgICAgICBkdXJhdGlvbjogMjAwMAogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyLCBudWxsLCBbWzAsIDZdXSk7CiAgICAgIH0pKSgpOwogICAgfQogIH0KfTs="},null]}