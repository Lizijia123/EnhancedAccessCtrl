{"remainingRequest":"/home/ubuntu/graduation-design/frontend/EnhancedAccessCtrl-FrontEnd/node_modules/thread-loader/dist/cjs.js!/home/ubuntu/graduation-design/frontend/EnhancedAccessCtrl-FrontEnd/node_modules/babel-loader/lib/index.js!/home/ubuntu/graduation-design/frontend/EnhancedAccessCtrl-FrontEnd/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ubuntu/graduation-design/frontend/EnhancedAccessCtrl-FrontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/graduation-design/frontend/EnhancedAccessCtrl-FrontEnd/src/views/myapp/detection_task_detail.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/graduation-design/frontend/EnhancedAccessCtrl-FrontEnd/src/views/myapp/detection_task_detail.vue","mtime":1741865254064},{"path":"/home/ubuntu/graduation-design/frontend/EnhancedAccessCtrl-FrontEnd/babel.config.js","mtime":1741865254048},{"path":"/home/ubuntu/graduation-design/frontend/EnhancedAccessCtrl-FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1741866277709},{"path":"/home/ubuntu/graduation-design/frontend/EnhancedAccessCtrl-FrontEnd/node_modules/thread-loader/dist/cjs.js","mtime":1741866277705},{"path":"/home/ubuntu/graduation-design/frontend/EnhancedAccessCtrl-FrontEnd/node_modules/babel-loader/lib/index.js","mtime":1741866279329},{"path":"/home/ubuntu/graduation-design/frontend/EnhancedAccessCtrl-FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1741866277709},{"path":"/home/ubuntu/graduation-design/frontend/EnhancedAccessCtrl-FrontEnd/node_modules/vue-loader/lib/index.js","mtime":1741866279657}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9yZWdlbmVyYXRvclJ1bnRpbWUgZnJvbSAiL2hvbWUvdWJ1bnR1L2dyYWR1YXRpb24tZGVzaWduL2Zyb250ZW5kL0VuaGFuY2VkQWNjZXNzQ3RybC1Gcm9udEVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vcmVnZW5lcmF0b3JSdW50aW1lLmpzIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL3VidW50dS9ncmFkdWF0aW9uLWRlc2lnbi9mcm9udGVuZC9FbmhhbmNlZEFjY2Vzc0N0cmwtRnJvbnRFbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwoKaW1wb3J0IEJhc2ljQ29uZmlnTW9kdWxlIGZyb20gJy4vY29tcG9uZW50cy9CYXNpY0NvbmZpZ01vZHVsZS52dWUnOwppbXBvcnQgQXBpRGlzY292ZXJ5TW9kdWxlIGZyb20gJy4vY29tcG9uZW50cy9BcGlEaXNjb3ZlcnlNb2R1bGUudnVlJzsKaW1wb3J0IE1vZGVsQ29uc3RydWN0aW9uTW9kdWxlIGZyb20gJy4vY29tcG9uZW50cy9Nb2RlbENvbnN0cnVjdGlvbk1vZHVsZS52dWUnOwppbXBvcnQgU3RhcnREZXRlY3Rpb25Nb2R1bGUgZnJvbSAnLi9jb21wb25lbnRzL1N0YXJ0RGV0ZWN0aW9uTW9kdWxlLnZ1ZSc7CmltcG9ydCB7IGdldEFwcERldGFpbCB9IGZyb20gJ0AvYXBpL215YXBwJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdEZXRlY3Rpb25EZXRhaWwnLAogIGNvbXBvbmVudHM6IHsKICAgIEJhc2ljQ29uZmlnTW9kdWxlOiBCYXNpY0NvbmZpZ01vZHVsZSwKICAgIEFwaURpc2NvdmVyeU1vZHVsZTogQXBpRGlzY292ZXJ5TW9kdWxlLAogICAgTW9kZWxDb25zdHJ1Y3Rpb25Nb2R1bGU6IE1vZGVsQ29uc3RydWN0aW9uTW9kdWxlLAogICAgU3RhcnREZXRlY3Rpb25Nb2R1bGU6IFN0YXJ0RGV0ZWN0aW9uTW9kdWxlCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgLy8g5a6a5LmJ5q+P5Liq5qih5Z2X55qEIHN0YXRlIOWSjCBkYXRhCiAgICAgIGJhc2ljQ29uZmlnU3RhdGU6ICdhY3RpdmUnLAogICAgICBiYXNpY0NvbmZpZ0RhdGE6IHsKICAgICAgICBpc0NvbXBsZXRlZDogZmFsc2UKICAgICAgfSwKICAgICAgYXBpRGlzY292ZXJ5U3RhdGU6ICdpbmFjdGl2ZScsCiAgICAgIGFwaURpc2NvdmVyeURhdGE6IHsKICAgICAgICBpc0NvbXBsZXRlZDogZmFsc2UsCiAgICAgICAgaXNMb2FkaW5nOiBmYWxzZSwKICAgICAgICBsYXN0X0FQSV9kaXNjb3ZlcnlfYXQ6IG51bGwKICAgICAgfSwKICAgICAgbW9kZWxDb25zdHJ1Y3Rpb25TdGF0ZTogJ2luYWN0aXZlJywKICAgICAgbW9kZWxDb25zdHJ1Y3Rpb25EYXRhOiB7CiAgICAgICAgaXNDb21wbGV0ZWQ6IGZhbHNlLAogICAgICAgIGlzTG9hZGluZzogZmFsc2UsCiAgICAgICAgbGFzdF9tb2RlbF9jb25zdHJ1Y3Rpb25fYXQ6IG51bGwsCiAgICAgICAgbW9kZWxEb25lOiBmYWxzZQogICAgICB9LAogICAgICBzdGFydERldGVjdGlvblN0YXRlOiAnaW5hY3RpdmUnLAogICAgICBzdGFydERldGVjdGlvbkRhdGE6IHsKICAgICAgICBpc0NvbXBsZXRlZDogZmFsc2UsCiAgICAgICAgaXNMb2FkaW5nOiBmYWxzZSwKICAgICAgICBkZXRlY3Rfc3RhdGU6ICdQQVVTRScKICAgICAgfQogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKC8qI19fUFVSRV9fKi9fcmVnZW5lcmF0b3JSdW50aW1lKCkubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZSgpLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgcmV0dXJuIF90aGlzLmZldGNoRGF0YSgpOwogICAgICAgICAgY2FzZSAyOgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUpOwogICAgfSkpKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBmZXRjaERhdGE6IGZ1bmN0aW9uIGZldGNoRGF0YSgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvcigvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZSgpLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIGlkLCByZXNwb25zZSwgZGF0YTsKICAgICAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZSgpLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgaWQgPSBfdGhpczIuJHJvdXRlLnBhcmFtcy5pZDsKICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDE7CiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA0OwogICAgICAgICAgICAgIHJldHVybiBnZXRBcHBEZXRhaWwoewogICAgICAgICAgICAgICAgaWQ6IGlkCiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgIGRhdGEgPSByZXNwb25zZS5kYXRhOyAvLyDorr7nva5BUEkgZGlzY292ZXJ55Y+C5pWwCiAgICAgICAgICAgICAgX3RoaXMyLmFwaURpc2NvdmVyeURhdGEubGFzdF9BUElfZGlzY292ZXJ5X2F0ID0gZGF0YS5sYXN0X0FQSV9kaXNjb3ZlcnlfYXQ7CgogICAgICAgICAgICAgIC8vIOiuvue9rm1vZGVsCiAgICAgICAgICAgICAgX3RoaXMyLm1vZGVsQ29uc3RydWN0aW9uRGF0YS5sYXN0X21vZGVsX2NvbnN0cnVjdGlvbl9hdCA9IGRhdGEubGFzdF9tb2RlbF9jb25zdHJ1Y3Rpb25fYXQ7CiAgICAgICAgICAgICAgaWYgKGRhdGEubW9kZWxfcmVwb3J0ICE9PSBudWxsKSB7CiAgICAgICAgICAgICAgICBfdGhpczIubW9kZWxDb25zdHJ1Y3Rpb25EYXRhLm1vZGVsRG9uZSA9IHRydWU7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAvLyDorr7nva5TdGFydCBEZXRlY3Rpb24KICAgICAgICAgICAgICBfdGhpczIuc3RhcnREZXRlY3Rpb25EYXRhLmRldGVjdF9zdGF0ZSA9IGRhdGEuZGV0ZWN0X3N0YXRlOwoKICAgICAgICAgICAgICAvLyDmoLnmja4gZGV0ZWN0X3N0YXRlIOiuvue9ruaooeWdl+eKtuaAgQogICAgICAgICAgICAgIF90aGlzMi5zZXRNb2R1bGVTdGF0ZXMoZGF0YS5kZXRlY3Rfc3RhdGUpOwoKICAgICAgICAgICAgICAvLyDorr7nva4gaXNDb21wbGV0ZWQg54q25oCBCiAgICAgICAgICAgICAgX3RoaXMyLnNldENvbXBsZXRpb25TdGF0dXMoZGF0YSk7CiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAxNzsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgY2FzZSAxNDoKICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDE0OwogICAgICAgICAgICAgIF9jb250ZXh0Mi50MCA9IF9jb250ZXh0MlsiY2F0Y2giXSgxKTsKICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKCdGYWlsZWQgdG8gZmV0Y2ggYXBwIGRldGFpbHM6JywgX2NvbnRleHQyLnQwKTsKICAgICAgICAgICAgY2FzZSAxNzoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMiwgbnVsbCwgW1sxLCAxNF1dKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgc2V0TW9kdWxlU3RhdGVzOiBmdW5jdGlvbiBzZXRNb2R1bGVTdGF0ZXMoZGV0ZWN0U3RhdGUpIHsKICAgICAgLy8g5qC55o2uIGRldGVjdF9zdGF0ZSDorr7nva7mqKHlnZfnmoQgc3RhdGUKICAgICAgc3dpdGNoIChkZXRlY3RTdGF0ZSkgewogICAgICAgIGNhc2UgJ0FQSV9MSVNUX1RPX0RJU0NPVkVSJzoKICAgICAgICAgIHRoaXMuYXBpRGlzY292ZXJ5U3RhdGUgPSAnYWN0aXZlJzsKICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgJ0FQSV9MSVNUX1RPX0lNUFJPVkUnOgogICAgICAgICAgdGhpcy5hcGlEaXNjb3ZlcnlTdGF0ZSA9ICdhY3RpdmUnOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSAnTU9ERUxfRkVBVFVSRVNfVE9fQ09ORklHVVJFJzoKICAgICAgICAgIHRoaXMuYXBpRGlzY292ZXJ5U3RhdGUgPSAnYWN0aXZlJzsKICAgICAgICAgIHRoaXMubW9kZWxDb25zdHJ1Y3Rpb25TdGF0ZSA9ICdhY3RpdmUnOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSAnU1RBUlRFRCc6CiAgICAgICAgY2FzZSAnUEFVU0VEJzoKICAgICAgICAgIHRoaXMuYXBpRGlzY292ZXJ5U3RhdGUgPSAnYWN0aXZlJzsKICAgICAgICAgIHRoaXMubW9kZWxDb25zdHJ1Y3Rpb25TdGF0ZSA9ICdhY3RpdmUnOwogICAgICAgICAgdGhpcy5zdGFydERldGVjdGlvblN0YXRlID0gJ2FjdGl2ZSc7CiAgICAgICAgICBicmVhazsKICAgICAgICBkZWZhdWx0OgogICAgICAgICAgLy8g6buY6K6k5oOF5Ya15LiL77yM5Y+q5pyJ56ys5LiA5Liq5qih5Z2X5pivIGFjdGl2ZQogICAgICAgICAgYnJlYWs7CiAgICAgIH0KICAgIH0sCiAgICBzZXRDb21wbGV0aW9uU3RhdHVzOiBmdW5jdGlvbiBzZXRDb21wbGV0aW9uU3RhdHVzKGRhdGEpIHsKICAgICAgLy8g5qC55o2uIGRldGVjdF9zdGF0ZSDorr7nva4gaXNDb21wbGV0ZWQg54q25oCBCiAgICAgIHN3aXRjaCAoZGF0YS5kZXRlY3Rfc3RhdGUpIHsKICAgICAgICBjYXNlICdBUElfTElTVF9UT19ESVNDT1ZFUic6CiAgICAgICAgICB0aGlzLmJhc2ljQ29uZmlnRGF0YS5pc0NvbXBsZXRlZCA9IHRydWU7CiAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlICdBUElfTElTVF9UT19JTVBST1ZFJzoKICAgICAgICAgIHRoaXMuYmFzaWNDb25maWdEYXRhLmlzQ29tcGxldGVkID0gdHJ1ZTsKICAgICAgICAgIC8vIHRoaXMuYXBpRGlzY292ZXJ5RGF0YS5pc0NvbXBsZXRlZCA9IHRydWU7CiAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlICdNT0RFTF9GRUFUVVJFU19UT19DT05GSUdVUkUnOgogICAgICAgICAgdGhpcy5iYXNpY0NvbmZpZ0RhdGEuaXNDb21wbGV0ZWQgPSB0cnVlOwogICAgICAgICAgdGhpcy5hcGlEaXNjb3ZlcnlEYXRhLmlzQ29tcGxldGVkID0gdHJ1ZTsKICAgICAgICAgIC8vIHRoaXMubW9kZWxDb25zdHJ1Y3Rpb25EYXRhLmlzQ29tcGxldGVkID0gdHJ1ZTsKICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgJ1NUQVJURUQnOgogICAgICAgIGNhc2UgJ1BBVVNFRCc6CiAgICAgICAgICB0aGlzLmJhc2ljQ29uZmlnRGF0YS5pc0NvbXBsZXRlZCA9IHRydWU7CiAgICAgICAgICB0aGlzLmFwaURpc2NvdmVyeURhdGEuaXNDb21wbGV0ZWQgPSB0cnVlOwogICAgICAgICAgdGhpcy5tb2RlbENvbnN0cnVjdGlvbkRhdGEuaXNDb21wbGV0ZWQgPSB0cnVlOwogICAgICAgICAgLy8gdGhpcy5zdGFydERldGVjdGlvbkRhdGEuaXNDb21wbGV0ZWQgPSB0cnVlOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgZGVmYXVsdDoKICAgICAgICAgIC8vIOm7mOiupOaDheWGteS4i++8jOaJgOacieaooeWdl+eahCBpc0NvbXBsZXRlZCDkuLogZmFsc2UKICAgICAgICAgIGJyZWFrOwogICAgICB9CiAgICB9CiAgfQp9Ow=="},null]}